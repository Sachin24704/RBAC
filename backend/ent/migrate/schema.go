// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ModelsColumns holds the columns for the "models" table.
	ModelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ModelsTable holds the schema information for the "models" table.
	ModelsTable = &schema.Table{
		Name:       "models",
		Columns:    ModelsColumns,
		PrimaryKey: []*schema.Column{ModelsColumns[0]},
	}
	// OperationsColumns holds the columns for the "operations" table.
	OperationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "model_id", Type: field.TypeInt},
	}
	// OperationsTable holds the schema information for the "operations" table.
	OperationsTable = &schema.Table{
		Name:       "operations",
		Columns:    OperationsColumns,
		PrimaryKey: []*schema.Column{OperationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "operations_models_operations",
				Columns:    []*schema.Column{OperationsColumns[2]},
				RefColumns: []*schema.Column{ModelsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// RoleOperationsColumns holds the columns for the "role_operations" table.
	RoleOperationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "operation_id", Type: field.TypeInt},
		{Name: "role_id", Type: field.TypeInt},
	}
	// RoleOperationsTable holds the schema information for the "role_operations" table.
	RoleOperationsTable = &schema.Table{
		Name:       "role_operations",
		Columns:    RoleOperationsColumns,
		PrimaryKey: []*schema.Column{RoleOperationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_operations_operations_role_operations",
				Columns:    []*schema.Column{RoleOperationsColumns[1]},
				RefColumns: []*schema.Column{OperationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "role_operations_roles_role_operations",
				Columns:    []*schema.Column{RoleOperationsColumns[2]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "role_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_roles_user_roles",
				Columns:    []*schema.Column{UserRolesColumns[1]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_roles_users_user_roles",
				Columns:    []*schema.Column{UserRolesColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ModelsTable,
		OperationsTable,
		RolesTable,
		RoleOperationsTable,
		UsersTable,
		UserRolesTable,
	}
)

func init() {
	OperationsTable.ForeignKeys[0].RefTable = ModelsTable
	RoleOperationsTable.ForeignKeys[0].RefTable = OperationsTable
	RoleOperationsTable.ForeignKeys[1].RefTable = RolesTable
	UserRolesTable.ForeignKeys[0].RefTable = RolesTable
	UserRolesTable.ForeignKeys[1].RefTable = UsersTable
}
